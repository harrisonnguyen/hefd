% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mode_of_sep.R
\name{suffix_to_keywords}
\alias{suffix_to_keywords}
\title{Promote suffix to own extraction group}
\usage{
suffix_to_keywords(grouping_map)
}
\arguments{
\item{grouping_map}{a [contextractr::Contextractr$add_serial()] compatible
list}
}
\value{
the `grouping_map`, but each group element is replaced with a list
        of groups built from its subelements, changing:
        * `suffix` -> `keyword`
        * `suffix.class` -> `title`
}
\description{
Promotes `suffix.class` + `suffix` pair `->` `title` + `keywords`, as in
    For each record, this becomes a whole new mapping, (ie if you have
    a list of `contextractr::Contextractr` mappings, each mapping becomes a
    list of mappings, and to give them to a
    `contextractr::Contextractr$new()` call, you would index into a top
    level element and give it that.
}
\details{
Helper function for encounter transforms until suffix extraction is
    implemented on contextractr.
}
\examples{
mapping <- list(
  death = list(title = "death",
    keywords = c("death", "dead", "died", "deceased"),
    suffix = c("with Autopsy", "without Autopsy"),
    suffix.class = c("with autopsy", "without autopsy")),
  transfer = list(
    title = "transfer",
    keywords = c("trans", "transfer"),
    suffix = c("Nurs.*Home", "Psych", "hopsital"),
    suffix.class = c("RACF", "psychiatric", "hospital")))

out <- mapping \%>\% suffix_to_keywords()

out \%>\% yaml::as_yaml() \%>\% cat()

\dontrun{
ctx <- contextractr::Contextractr$new(serial = out$death)

df <- fake_df()
df \%<>\% ctx$locate_keywords(fake_col)
}
}
\keyword{internal}
