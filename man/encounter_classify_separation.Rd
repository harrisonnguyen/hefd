% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mode_of_sep.R
\name{encounter_classify_separation}
\alias{encounter_classify_separation}
\title{Classify the Mode of Separation for Encounters}
\usage{
encounter_classify_separation(
  encounters,
  enc_udf_dests,
  grouping_map = NULL,
  encounter_key = "ENCNTR_ID",
  dc_disp = "DISCH_DISPOSITION_CD",
  dest = "DESTINATION"
)
}
\arguments{
\item{encounters}{the encounter df, with a `disch_disposition` column.}

\item{enc_udf_dests}{the user defined field table, with a `destination`
column, as given by [encounter_udf_add_dest()]}

\item{grouping_map}{a [contextractr::Contextractr] / `CLACK` compatible
(serialized) grouping, conforming to
[contextracr::Contextractr$add_serial()].
Likely produced by [mode_of_sep_groupings()]}
}
\value{
the `encounters` df, but with the extra columns as specified in the
        section Output.
}
\description{
Classify the Mode of Separation for Encounters
}
\section{Output}{

 These will accumulate/collapse common combinations of `destination`
 values with `disch_disposition` values

 * `enc_separation_mode`
   * This will correspond to some aggregation between destination and
     discharge disposition.
     * In particular, it will work on the output classifications made
       by `grouping_map`.
     * See [enc_sep_transfer_patterns()] and [enc_sep_base_patterns()]
       for a more detailed description of these rules.
 * `enc_separation_comment`
   * This adds some extra qualification to the grouping obtained-
     Presently this checks the `suffix.class` extracted from
     `grouping_map` in particular:
     * For the case of "transfer", it will extract
       `internal/external_lhd`, if detected
     * For the case of "death", it will extract any suffix class
       detected.
}

\seealso{
Other mode_of_separation: 
\code{\link{mode_of_separation_rules}}
}
\concept{encounters}
\concept{mode_of_separation}
